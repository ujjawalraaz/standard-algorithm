

//qs link:https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps/0

#include<iostream>
#define ll long long int
using namespace std;
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll n;
        cin>>n;
        ll arr[n];
        for(ll i=0;i<n;i++)
        cin>>arr[i];
        ll dp[n+1][n+1];
        for(ll i=0;i<=n;i++)
        dp[0][i]=1e15;
        dp[0][1]=0;
        for(int i=1;i<=n;i++)
        {
            dp[i][i]=dp[i-1][i];
            for(ll j=i+1;j<=n;j++)
            {
                if(j<=i+arr[i-1])
                dp[i][j]=min(dp[i-1][j],1+dp[i][i]);
                else
                dp[i][j]=dp[i-1][j];
            }
        }
     /*   for(int i=0;i<=n;i++){
        for(int j=1;j<=n;j++)
        cout<<dp[i][j]<<" ";
        cout<<endl;}*/
        if(dp[n][n]==1e15)
        cout<<"-1"<<endl;
        else
        cout<<dp[n][n]<<endl;
    }
}

we can reduce space complexity to o(n)
