

//qs link:https://practice.geeksforgeeks.org/problems/egg-dropping-puzzle/0

#include<bits/stdc++.h> 
#define ll long long int
using namespace std; 

// A utility function to get maximum of two integers 
int max(int a, int b) { return (a > b)? a: b; } 
ll dp[15][55];
/* Function to get minimum number of trials needed in worst 
case with n eggs and k floors */
ll eggDrop(ll n, ll k) 
{ 
	// If there are no floors, then no trials needed. OR if there is 
	// one floor, one trial needed. 
	if (k == 1 || k == 0) 
		return k; 

	// We need k trials for one egg and k floors 
	if (n == 1) 
		return k; 
    if(dp[n][k]!=-1)
    return(dp[n][k]);
    else{
	ll min = 1e15, x, res; 

	// Consider all droppings from 1st floor to kth floor and 
	// return the minimum of these values plus 1. 
	for (x = 1; x <= k; x++) 
	{ 
		res = max(eggDrop(n-1, x-1), eggDrop(n, k-x)); 
		if (res < min) 
			min = res; 
	} 

	return(dp[n][k]=min + 1); }
} 

int main()
 {
	//code
	ll t;
	cin>>t;
	while(t--)
	{
	    ll n,k;
	    cin>>n>>k;
	    for(ll i=0;i<=n;i++)
	    for(ll j=0;j<=k;j++)
	    dp[i][j]=-1;
	    ll res=eggDrop(n,k);
	    cout<<res<<endl;
	}
	return 0;
}
